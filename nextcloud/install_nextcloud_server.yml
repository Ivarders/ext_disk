---
- name: Установка и настройка сервера NextCloud
  hosts: all
  become: true
  vars:
      # INPUT - Пароль от базы данных
      POSTGRES_PASSWORD: "{{POSTGRES_PASSWORD}}"
      #
      #
      POSTGRES_USER: "nextcloud"
      POSTGRES_DB: "{{POSTGRES_USER}}"
      PATH_NEXTCLOUD: "/home/nextcloud"
      PATH_NEXTCLOUD_DATA: "/mnt/extdisk/nextcloud"
  tasks:
      - name: Установка wireguard
        apt:
            name:
                - wireguard
            state: present

      - name: Скопировать конфигурацию для wireguard
        synchronize:
            src: "../self_config/orangepizero2.conf"
            dest: "/etc/wireguard"
            delete: yes

      - name: Включить Wireguard VPN
        command: wg-quick down orangepizero2

      - name: Выключить Wireguard VPN
        command: wg-quick up orangepizero2

      - name: Установка Docker
        import_tasks: ../script/docker_install.yml

      - name: Копирование папки conf на удаленный сервер
        synchronize:
            src: "./conf"
            dest: "{{PATH_NEXTCLOUD}}"
            delete: yes

      - name: Создание файла из шаблона
        template:
            src: ./conf/db.j2
            dest: "{{PATH_NEXTCLOUD}}/conf/db.env"

      - name: Создание SSL сертификата
        block:
            - name: Проверка наличия SSL-сертификата
              stat:
                  path: "{{ item }}"
              register: ssl_cert_files
              failed_when: false
              loop:
                  - "{{ PATH_NEXTCLOUD }}/ssl/private_key"
                  - "{{ PATH_NEXTCLOUD }}/ssl/certificate.crt"

            - name: Создать SSL сертификат
              shell: "mkdir -p {{ PATH_NEXTCLOUD }}/ssl && openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout {{ PATH_NEXTCLOUD }}/ssl/private_key -out {{ PATH_NEXTCLOUD }}/ssl/certificate.crt -subj '/C=RU'"
              when: not ssl_cert_files.results[0].stat.exists or not ssl_cert_files.results[1].stat.exists

      - name: docker-compose
        block:
            - name: Остановить docker-compose
              command: docker-compose down
              args:
                  chdir: "{{PATH_NEXTCLOUD}}/conf"

            - name: Сборка docker-compose
              command: docker-compose build
              args:
                  chdir: "{{PATH_NEXTCLOUD}}/conf"

            - name: Запуск docker-compose
              command: docker-compose up -d
              args:
                  chdir: "{{PATH_NEXTCLOUD}}/conf"

            - name: Разрешить все подключения от разных доменных имен в файле config.php
              ansible.builtin.replace:
                  path: "{{PATH_NEXTCLOUD_DATA}}/nextcloud/config/config.php"
                  regexp: "^(\\s*'trusted_domains'\\s*=>).*"
                  replace: "\\1 array(0 => '*'),"

            - name: Остановить docker-compose
              command: docker-compose down
              args:
                  chdir: "{{PATH_NEXTCLOUD}}/conf"

            - name: Запуск docker-compose
              command: docker-compose up -d
              args:
                  chdir: "{{PATH_NEXTCLOUD}}/conf"
