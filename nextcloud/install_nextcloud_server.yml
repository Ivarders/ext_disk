---
- name: Установка и настройка сервера NextCloud
  hosts: all
  become: true
  vars:
      POSTGRES_USER: "nextcloud"
      POSTGRES_DB: "{{ POSTGRES_USER }}"
      PATH_NEXTCLOUD: "/home/nextcloud"
      PATH_NEXTCLOUD_DATA: "/mnt/extdisk/nextcloud"
      NAME_WIREGUARD_CONF: nextcloudserver

  tasks:
      - name: Настройка WireGuard
        tags: wireguard
        block:
            - name: Обновление apt
              apt:
                  update_cache: yes

            - name: Установка WireGuard
              apt:
                  name:
                      - wireguard
                  state: present

            - name: Скопировать конфигурацию для WireGuard
              synchronize:
                  src: "../self_config/{{ NAME_WIREGUARD_CONF }}.conf"
                  dest: "/etc/wireguard"
                  delete: yes

            - name: Запустить WireGuard
              systemd:
                  name: "wg-quick@{{ NAME_WIREGUARD_CONF }}"
                  state: started
                  enabled: yes

      - name: Копировать конфигурации для запуска NextCloud
        block:
            - name: Копирование папки conf на удаленный сервер
              synchronize:
                  src: "./conf"
                  dest: "{{ PATH_NEXTCLOUD }}"
                  delete: yes

            - name: Создание файла из шаблона
              template:
                  src: "./conf/db.j2"
                  dest: "{{ PATH_NEXTCLOUD }}/conf/db.env"

      - name: Настройка SSL сертификата
        block:
            - name: Проверка наличия SSL-сертификата
              stat:
                  path: "{{ item }}"
              register: ssl_cert_files
              failed_when: false
              loop:
                  - "{{ PATH_NEXTCLOUD }}/ssl/private_key"
                  - "{{ PATH_NEXTCLOUD }}/ssl/certificate.crt"

            - name: Создать SSL сертификат
              shell: "mkdir -p {{ PATH_NEXTCLOUD }}/ssl && openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout {{ PATH_NEXTCLOUD }}/ssl/private_key -out {{ PATH_NEXTCLOUD }}/ssl/certificate.crt -subj '/C=RU'"
              when: not ssl_cert_files.results[0].stat.exists or not ssl_cert_files.results[1].stat.exists

      - name: Настройка docker-compose
        block:
            - name: Установка Docker
              import_tasks: ../script/docker_install.yml

            - name: Остановить docker-compose
              command: docker-compose down
              args:
                  chdir: "{{ PATH_NEXTCLOUD }}/conf"

            - name: Сборка docker-compose
              command: docker-compose build
              args:
                  chdir: "{{ PATH_NEXTCLOUD }}/conf"

            - name: Запуск docker-compose
              command: docker-compose up -d
              args:
                  chdir: "{{ PATH_NEXTCLOUD }}/conf"

            - name: Разрешить все подключения от разных доменных имен в файле config.php
              ansible.builtin.replace:
                  path: "{{ PATH_NEXTCLOUD_DATA }}/nextcloud/config/config.php"
                  regexp: "^(\\s*'trusted_domains'\\s*=>).*"
                  replace: "\\1 array(0 => '*'),"

            - name: Остановить docker-compose
              command: docker-compose down
              args:
                  chdir: "{{ PATH_NEXTCLOUD }}/conf"

            - name: Запуск docker-compose
              command: docker-compose up -d
              args:
                  chdir: "{{ PATH_NEXTCLOUD }}/conf"
